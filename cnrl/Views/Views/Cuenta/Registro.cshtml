@using cnrl.Helpers
@using cnrl.Logica
@using System.Web.Mvc.Html;

@model cnrl.ViewModels.ViewModelRegistro
@{
    Layout = "";
    ViewBag.Titulo = "Registro";
    ViewBag.Subtitulo = Strings.TituloAdmin;
    var Roles = (SelectList)ViewBag.Roles;
    var TiposDocumento = (SelectList)ViewBag.TiposDocumento;
    var Provincias = (SelectList)ViewBag.Provincias;
    var Localidades = (SelectList)ViewBag.Localidades;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Registración</title>
    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
    <!-- Bootstrap 3.3.4 -->
    <link href="@Url.Content("~/Content/admin-lte/bootstrap/css/bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <!-- Font Awesome Icons -->
    <link href="@Url.Content("~/Content/admin-lte/dist/css/font-awesome.min.css")" rel="stylesheet" type="text/css" />
    <!-- Ionicons -->
    <link href="@Url.Content("~/Content/admin-lte/dist/css/ionicons.min.css")" rel="stylesheet" type="text/css" />
    <!-- Theme style -->
    <link href="@Url.Content("~/Content/admin-lte/dist/css/AdminLTE.min.css")" rel="stylesheet" type="text/css" />

    <link href="@Url.Content("~/Scripts/select2-3.5.4/select2.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Scripts/select2-3.5.4/select2-bootstrap-ok.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/admin-lte/plugins/daterangepicker/daterangepicker-bs3.css")" rel="stylesheet" type="text/css" />
    <!-- iCheck -->
    <link href="@Url.Content("~/Content/admin-lte/plugins/iCheck/square/blue.css")" rel="stylesheet" type="text/css" />
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body class="register-page">

    <div class="register-box" style="width:600px">
        <div class="register-logo">
            <img src="@Url.Content("~/Content/images/logo-ides.png")" width="100" alt="Logo ides" />

            <b>Sistema de Inscripción de Cursos IDES</b>
        </div><!-- /.login-logo -->
        <div class="register-box-body">
            @using (Html.BeginForm("Registro", "Cuenta", FormMethod.Post, new { role = "form", @class = "form-signin", id = "frmRegistro" }))
            {
                @Html.AntiForgeryToken()
                <div class="box-header">
                    <h1 class="box-title">@ViewBag.Titulo</h1>
                </div>
                <div class="box-body">
                    @if (!ViewData.ModelState.IsValid)
                {
                        <div class="alert alert-danger">
                            <button type="button" class="close" data-dismiss="alert">×</button>
                            <span>@Strings.ErrorMensajeGenerico</span>
                            <br />
                            <span>@Html.ValidationMessage("Error")</span>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                {
                        <div class="alert alert-error">@ViewBag.ErrorMessage</div>
                    }

                    @Html.HiddenFor(model => model.usuario.Id)

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.TipoDocumento, "TipoDocumento", htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.DropDownListFor(model => model.usuario.TipoDocumento, TiposDocumento, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.usuario.TipoDocumento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.NroDocumento, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.NroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                            @Html.ValidationMessageFor(model => model.usuario.NroDocumento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.Apellido, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                            @Html.ValidationMessageFor(model => model.usuario.Apellido, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.Nombre, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                            @Html.ValidationMessageFor(model => model.usuario.Nombre, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Contraseña</label>
                        @Html.PasswordFor(m => m.resetPassword.Password, new { @class = "form-control", placeholder = "Contraseña" })
                        @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                        @Html.ValidationMessageFor(model => model.resetPassword.Password, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">*@
                        <label class="control-label">Repetir Contraseña</label>
                        @Html.PasswordFor(m => m.resetPassword.ConfirmPassword, new { @class = "form-control", placeholder = "Repetir Contraseña" })
                        @Html.ValidationMessageFor(model => model.resetPassword.ConfirmPassword, "", new { @class = "text-danger" })
                        @*</div>*@
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.FechaNacimiento, htmlAttributes: new { @class = "control-label " })
                        <div>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.EditorFor(model => model.usuario.FechaNacimiento, new { htmlAttributes = new { @class = "form-control pull-right FechaNacimiento" } })


                            </div>
                            @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                            @Html.ValidationMessageFor(model => model.usuario.FechaNacimiento, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.provincia, "provincia", htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.DropDownListFor(model => model.usuario.provincia, Provincias, htmlAttributes: new { @class = "form-control", id = "provincia" })
                            @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                            @Html.ValidationMessageFor(model => model.usuario.provincia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.localidad, "localidad", htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.DropDownListFor(model => model.usuario.localidad, Localidades, htmlAttributes: new { @class = "form-control", id = "localidad" })
                            @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                            @Html.ValidationMessageFor(model => model.usuario.localidad, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.Calle, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.Calle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.usuario.Calle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.NroCalle, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.NroCalle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.usuario.NroCalle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.piso, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.piso, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.usuario.piso, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.dpto, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.dpto, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.usuario.dpto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.Telefono, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                            @Html.ValidationMessageFor(model => model.usuario.Telefono, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.Telefono2, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.Telefono2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.usuario.Telefono2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.usuario.Email, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.usuario.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.Label("*Campo obligatorio", new { @style = "color:red" })
                            @Html.ValidationMessageFor(model => model.usuario.Email, "", new { @class = "text-danger" })

                        </div>
                    </div>

                </div>


            }
            <div class="box-footer">
                <div class="pull-right">
                    <button type="button" class="btn btn-primary btn-block btn-flat" value="Registrar" onclick="submit();">Registrar</button>
                </div>
            </div>
        </div><!-- /.login-box-body -->
    </div><!-- /.login-box -->
    <!-- jQuery 2.1.4 -->
    <script src="@Url.Content("~/Scripts/jquery-3.1.0.min.js")"></script>
    <!-- Bootstrap 3.3.2 JS -->
    <script src="@Url.Content("~/Scripts/bootstrap.min.js")" type="text/javascript"></script>
    <!-- iCheck -->
    <script src="@Url.Content("~/Content/admin-lte/plugins/iCheck/icheck.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin-lte/plugins/input-mask/jquery.inputmask.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin-lte/plugins/input-mask/jquery.inputmask.date.extensions.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin-lte/plugins/input-mask/jquery.inputmask.extensions.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/select2-3.5.4/select2.min.js")"></script>
    <script src="@Url.Content("~/Scripts/bootbox.js")"></script>
    <script src="@Url.Content("~/Scripts/moment-with-locales.js")"></script>
    <script src="@Url.Content("~/Scripts/moment.js")"></script>
    <script src="@Url.Content("~/Content/admin-lte/plugins/daterangepicker/daterangepicker.js")" type="text/javascript"></script>
    <script>
        $(document).ready(function () {
            $(".FechaNacimiento").inputmask("dd/mm/yyyy", { "placeholder": "dd/mm/yyyy" });




            moment.locale('es');

            $(".FechaNacimiento").daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                format: "DD/MM/YYYY"
            });

            $("#provincia").select2({
                allowClear: true
            });
            $("#localidad").select2({
                allowClear: true
            });
            $('#provincia').change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#localidad");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetLocalidades", "Usuarios")",
                    data: { "IdProvincia": selectedItem },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.Value).html(option.Text));
                        });
                        statesProgress.hide();
                    }
                });
            });
        });

        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' // optional
            });

        });

        function submit() {
            //var fecha = $('.FechaNacimiento').val();
            //    var edad = '';

            //    //supose my date is dd/mm/yyyy
            //    if ((fecha.substring(2, 3) != "/") && (fecha.substring(5, 6) != "/")) {
            //        edad = '';
            //    }
            //    else {
            //        var dia = fecha.substring(0, 2);
            //        var mes = fecha.substring(3, 5);
            //        var anio = fecha.substring(6, 10);
            //        var diaActual = (new Date).getDay();
            //        var mesActual = (new Date).getMonth();
            //        var anioActual = (new Date).getFullYear();

            //        if (mes > mesActual)
            //            edad = anioActual - anio - 1;

            //        if (mesActual == mes && dia > diaActual)
            //            edad = anioActual - anio - 1;

            //        edad = anioActual - anio;

            //        if (edad < 0 || edad > 100)
            //            edad = '';

            //    }

            //    if (edad >= 60) {
            //        bootbox.alert({
            //            message: "Felicidades, usted puede gozar de beneficios por ser mayor de 60 años, para esto debe presentarse en la oficina de socioculturales",
            //            callback: function () {
            //                $('.modal').modal('hide');
            //                $('#frmRegistro').submit();

            //            }
            //        })
            //    }
            //    else
            //    {
            $('#frmRegistro').submit();
            //  }

        }
    </script>
</body>
</html>









@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

@section Styles {
    <style>
        /*body {
            background-color: #f5f5f5;
        }*/
        .form-signin {
            max-width: 330px;
            padding: 15px;
            margin: 0 auto;
        }

            .form-signin .form-control {
                position: relative;
                font-size: 16px;
                height: auto;
                padding: 10px;
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
            }

                .form-signin .form-control:focus {
                    z-index: 2;
                }

            .form-signin input[type="text"] {
                margin-bottom: -1px;
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;
            }

            .form-signin input[type="password"] {
                margin-bottom: 10px;
                border-top-left-radius: 0;
                border-top-right-radius: 0;
            }

        .account-wall {
            margin-top: 80px;
            padding: 40px 0px 20px 0px;
            background-color: #ffffff;
            box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.16);
        }

        .login-title {
            color: #555;
            font-size: 22px;
            font-weight: 400;
            display: block;
        }

        .profile-img {
            width: 96px;
            height: 96px;
            margin: 0 auto 10px;
            display: block;
            /*-moz-border-radius: 50%;
            -webkit-border-radius: 50%;
            border-radius: 50%;*/
        }

        .select-img {
            border-radius: 50%;
            display: block;
            height: 75px;
            margin: 0 30px 10px;
            width: 75px;
            -moz-border-radius: 50%;
            -webkit-border-radius: 50%;
            border-radius: 50%;
        }

        .select-name {
            display: block;
            margin: 30px 10px 10px;
        }

        .logo-img {
            width: 96px;
            height: 96px;
            margin: 0 auto 10px;
            display: block;
            /*-moz-border-radius: 50%;
            -webkit-border-radius: 50%;
            border-radius: 50%;*/
        }
    </style>
}