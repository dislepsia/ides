@using cnrl.Helpers
@model cnrl.sede

@{
    Layout = null;
}

@Html.Hidden("Titulo", "Crear una nueva Sede")
@Html.Hidden("Subtitulo", "")

<div class="row">
<div class="col-md-12">

@using (Ajax.BeginForm("Create", "Sede", FormMethod.Post, new AjaxOptions
                                    {
                                        OnSuccess = "AjaxOk",
                                        HttpMethod = "POST"
                                    }))
{
    @Html.AntiForgeryToken()
    //@Html.HiddenFor(model => model.codigo)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="box box-solid box-success">
        <div class="box-header">
            <h6 class="box-title" style="font-size: 1.5em;">Datos de la Sede</h6>
        </div>

        <div class="box-body">

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    <span>@Strings.ErrorMensajeGenerico</span>
                </div>
            }

            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="alert alert-error">@ViewBag.ErrorMessage</div>
            }

            <div class="form-group">
                <label>Nombre:</label>
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>Telefono:</label>
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger", @type="phone" })
            </div>

            <div class="form-group">
                <label>Dirección:</label>
                @Html.EditorFor(model => model.domicilio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.domicilio, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>Mail:</label>
                @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>Contacto:</label>
                @Html.EditorFor(model => model.contacto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contacto, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>

    @* Botones *@
    <div class="form-group">
        <div class="pull-right">
            <input type="submit" value="Crear" class="btn btn-flat btn-success" />
        </div>
        <div class="pull-left">
            <div class="btn btn-flat btn-default">
                @Html.ActionLink("Cerrar", "Index")
            </div>
        </div>
    </div>
}
    </div>
</div>