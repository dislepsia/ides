@using cnrl.Helpers
@model cnrl.curso

@{
    Layout = null;
    string modo = ViewBag.modo;
    var esAlta = modo == "Create";
    var esVista = modo == "View";
    var esEdit = modo == "Edit";
    var esBaja = modo == "Delete";
    var titulo = string.Format("{0} {1}", esAlta ? Strings.BtnNuevo : (esEdit ? Strings.BtnEditar : (esBaja ? Strings.BtnBorrar : Strings.BtnVer)), Strings.ColCurso);
    ViewBag.Titulo = Strings.ColCurso;
    ViewBag.Subtitulo = titulo;

    var conceptos = (SelectList)ViewBag.conceptos;
    var tipos = (SelectList)ViewBag.tiposCurso;
}

@Html.Hidden("Titulo", Strings.ColCurso)
@Html.Hidden("Subtitulo", titulo)
@* Por si sale en una 2 Pantalla de Modal *@
@Html.Hidden("Titulo2", Strings.ColCurso)
@Html.Hidden("Subtitulo2", titulo)

<script>
    function OnBeginCallback(s, e) {
        e.customArgs["IdCurso"] = $('#codigo').val();
    }
</script>
<div class="row">
    <div class="col-md-12">
        @using (Ajax.BeginForm(modo, "Cursos", FormMethod.Post,
                                                            new AjaxOptions
                                                            {
                                                                OnSuccess = ViewBag.Callback,
                                                                HttpMethod = "POST"
                                                            }))
        {
            <div class="box-body" id="controles">
                @if (esBaja)
                {
                    <p class="rojo alerta">@Strings.MsgDeseaBorrar</p>
                }
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <span>@Strings.ErrorMensajeGenerico</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                {
                    <div class="alert alert-error">@ViewBag.ErrorMessage</div>
                }

                @Html.HiddenFor(m => m.codigo)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label class="control-label">Código Curso</label>
                    <div>
                        @Html.EditorFor(model => model.codCurso, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.codCurso, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForNormalizada(model => model.descripcion, htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForNormalizada(model => model.horasSemanales, htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.EditorFor(model => model.horasSemanales, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.horasSemanales, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForNormalizada(model => model.concepto, "concepto", htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.DropDownList("concepto", conceptos, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.concepto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForNormalizada(model => model.tipoCurso, "tipoCurso", htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.DropDownList("tipoCurso", tipos, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.tipoCurso, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForNormalizada(model => model.nivel, htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.EditorFor(model => model.nivel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nivel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForNormalizada(model => model.extraInfo, htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.EditorFor(model => model.extraInfo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.extraInfo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForNormalizada(model => model.RequierePreInscripcion, htmlAttributes: new { @class = "control-label " })
                    @Html.CheckBoxFor(model => model.RequierePreInscripcion, htmlAttributes: new { id = "checkPreInscripcion" })
                    @Html.ValidationMessageFor(model => model.RequierePreInscripcion, "", new { @class = "text-danger" })
                </div>

                <div id="ocultable">
                    <div class="bootstrap-timepicker">
                        <div class="form-group">
                            @Html.LabelForNormalizada(model => model.horaDocumentacion, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group" id="ocultable">
                                <div class="input-group-addon">
                                    <i class="fa fa-clock-o"></i>
                                </div>
                                @Html.EditorFor(model => model.horaDocumentacion, new { htmlAttributes = new { @class = "form-control timepicker", id = "horaDocumentacion" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.horaDocumentacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.fechaDocumentacion, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group" id="ocultable">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.EditorFor(model => model.fechaDocumentacion, new { htmlAttributes = new { @class = "form-control pull-right FechaNacimiento", id = "fechaDocumentacion" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.fechaDocumentacion, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelForNormalizada(model => model.documentacion, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.EditorFor(model => model.documentacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.documentacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

            </div>
            if (!esAlta)
            {
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">Correlativas</h3>
                    </div><!-- /.box-header -->
                    <div class="box-body no-padding">
                        @if (Model == null)
                        {
                            <p>Curso sin correlativas</p>
                        }
                        else if (Model.curso1 == null)
                        {
                            <p>Curso sin correlativas</p>
                        }
                        else if (Model.curso1.Count == 0)
                        {
                            <p>Curso sin correlativas</p>
                        }
                        else
                        {
                            <table class="table table-striped" style="width:200px">
                                <tr>
                                    <th style="width: 50px">Codigo</th>
                                    <th>Descripción</th>
                                </tr>    @foreach (var correlativa in Model.curso1)
                                {
                                    <tr>
                                        <td>@correlativa.codCurso</td>
                                        <td>@correlativa.descripcion</td>
                                    </tr>
                                }
                            </table>
                        }
                    </div><!-- /.box-body -->
                </div><!-- /.box -->
            }
            <div class="box-footer">
                <div class="pull-left">
                    <button type="button" data-dismiss="modal" class="btn btn-flat btn-default" @*id="cerrar" name="cerrar"*@ >Cerrar</button>
                </div>
                <div class="pull-right">
                    <div>
                        @if (!esBaja)
                        {
                            if (!esVista)
                            {
                                <button type="submit" class="btn btn-flat btn-success">@Strings.BtnGuardar</button>
                            }
                        }
                        else
                        {
                            <button type="submit" class="btn btn-flat btn-danger">@Strings.BtnBorrar</button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script>
    $(function () {
        // customize all inputs (will search for checkboxes and radio buttons)
        $('input').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
            increaseArea: '30%' // optional
        });
    });

    $(document).ready(function () {
        var modo = '@modo';
        if (modo == "Delete" || modo == "View") {
            $('#controles').find('input[type!="hidden"], textarea, button, select').attr('disabled', 'disabled');
            
            
        }

        //$('#cerrar').click(function () {
        //    $("#DlgGenericoBody2").html('');
        //})
        
        
        $(".timepicker").timepicker({
            showInputs: false,
            showMeridian: false
        });

        $(".FechaNacimiento").inputmask("dd/mm/yyyy", { "placeholder": "dd/mm/yyyy" });

        $(".FechaNacimiento").daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            format: "DD/MM/YYYY"
        });

        if (modo == "Edit" || modo == "View" || modo == "Delete" || modo == "Create") {
            if (!$('#checkPreInscripcion').prop("checked")) {
                $('#ocultable').hide();

            }
        }

        $('input').on('ifChanged', function (event) { $(event.target).trigger('change'); });

        $("[name='RequierePreInscripcion']").change(function () {
            var $checkbox = $('#checkPreInscripcion');

            if ($checkbox.prop('checked')) {
                $("#ocultable").show();
            } else {
                $("#ocultable").hide();
                $("#fechaDocumentacion").val('');
                $("#horaDocumentacion").val('');
                $("#documentacion").val('');
            }
        });

    });


</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
