@using DevExpress.Web.Mvc.UI
@using System.Drawing
@using System.Web.UI.WebControls


@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "Grid";
        settings.KeyFieldName = "codigo";
        settings.Caption = "Cursadas";

        settings.CallbackRouteValues = new { Controller = "cursa", Action = "PartialGridCursadas" };
        // Settings
        settings.Width = Unit.Percentage(100);
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.AlwaysShowPager = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.ControlStyle.Paddings.Padding = Unit.Pixel(0);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.BackColor = Color.LightGray;
        //settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        //settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;

        // Columnas
        settings.Columns.Add(col => { col.FieldName = "codigo"; col.Caption = Strings.ColId; col.Visible = false; });

        settings.Columns.Add(col => { col.FieldName = "fechaAlta"; col.Caption = "Fecha"; col.PropertiesEdit.DisplayFormatString = "d"; col.Width = Unit.Pixel(25); });

        settings.Columns.Add(col => { col.FieldName = "AspNetUsers.NroDocumento"; col.Caption = "N° Doc"; });
        settings.Columns.Add(col => { col.FieldName = "AspNetUsers.Nombre"; col.Caption = "Nombre"; });
        settings.Columns.Add(col => { col.FieldName = "AspNetUsers.Apellido"; col.Caption = "Apellido"; });
        settings.Columns.Add(col => { col.FieldName = "AspNetUsers.Telefono"; col.Caption = "1er Telefono"; });
        settings.Columns.Add(col => { col.FieldName = "AspNetUsers.Telefono2"; col.Caption = "2do Telefono"; });
        settings.Columns.Add(col => { col.FieldName = "AspNetUsers.Email"; col.Caption = "Email"; });
        settings.Columns.Add(col => { col.FieldName = "AspNetUsers.TipoAlumnoDescripcion"; col.Caption = "Tipo Alumno"; });
        settings.Columns.Add(col => { col.FieldName = "AspNetUsers.Carrera"; col.Caption = "Carrera"; });

        settings.Columns.Add(col => { col.FieldName = "oferta1.curso1.tipocurso1.descripcion"; col.Caption = Strings.ColTipoCurso; });
        settings.Columns.Add(col => { col.FieldName = "oferta1.curso1.descripcion"; col.Caption = Strings.ColCurso; });
        settings.Columns.Add(col => { col.FieldName = "oferta1.codigo"; col.Caption = "Comisión"; col.Width = Unit.Pixel(25); });
        settings.Columns.Add(col => { col.FieldName = "oferta1.sede1.nombre"; col.Caption = Strings.ColSede; });
        settings.Columns.Add(col => { col.FieldName = "oferta1.periodolectivo1.descripcion"; col.Caption = Strings.ColPeriodo; });
        settings.Columns.Add(col => { col.FieldName = "oferta1.horario"; col.Caption = "Horario"; });

        //settings.Columns.Add(col => { col.FieldName = "descripcion"; col.Caption = "Condición"; col.Width = Unit.Pixel(25); });
        settings.Columns.Add(col => { col.FieldName = "EstadoCursa.descripcion"; col.Caption = "Estado"; col.Width = Unit.Pixel(25); });
        settings.Columns.Add(col => { col.FieldName = "ResultadoCursa.descripcion"; col.Caption = "Condición de Cursada"; col.Width = Unit.Pixel(25); });
        settings.Columns.Add(col => { col.FieldName = "observacion"; col.Caption = "Nota"; col.Width = Unit.Pixel(25); });
        settings.Columns.Add(col => { col.FieldName = "oferta1.curso1.RequierePreInscripcion"; col.Caption = "Requiere Pre Inscripción"; col.ColumnType = MVCxGridViewColumnType.CheckBox; col.Width = Unit.Pixel(25); });

        // Botones
        settings.Columns.Add(column =>
        {
            column.FieldName = "aprobo";
            column.SetDataItemTemplateContent(c => ViewContext.Writer.Write(
                "<button type='button' class='btn btn-flat btn-xs btn-info habilitar' onclick='habilitarAjax({0});' id='BotonHabilitar_{0}' name='BotonHabilitar' value='{0}' title='{1}'>{2}</button>&nbsp;",

                DataBinder.Eval(c.DataItem, "codigo"),
                    "Aprobar/No Aprobar",
                    ((string)DataBinder.Eval(c.DataItem, "descripcion") == "No") ? "<i class='fa fa-check'></i>" : "<i class='fa fa-times'></i>"
                ));

            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 50;
            column.Visible = false;

        });
        settings.Columns.Add(column =>
        {

            column.SetDataItemTemplateContent(c => ViewContext.Writer.Write(

                   "<button type='button' class='btn btn-flat btn-xs btn-info imputar' onclick='preguntarBaja({3});' id='BotonImputar_{3}' name='BotonImputar' value='{3}' title='{4}'>{5}</button>&nbsp;" +
                   "<button type='button' class='btn btn-flat btn-xs btn-info imputar' onclick='preguntarEliminar({6});' id='BotonImputar_{6}' name='BotonImputar' value='{6}' title='{7}'>{8}</button>&nbsp;" +
                   "<a class='btn btn-flat btn-xs btn-info' href='{9}' title='{10}'>{11}</a>&nbsp;" +
                   "<a class='btn btn-flat btn-xs btn-info' href='{0}' title='{1}'>{2}</a>",

                   string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("CambioComision", "Cursa", new { id = DataBinder.Eval(c.DataItem, "codigo") })),
                   "Cambiar Comision",
                   "<i class='fa fa-random'></i>",

                    DataBinder.Eval(c.DataItem, "codigo"),
                    "Dar de Baja Cursada",
                    ((string)DataBinder.Eval(c.DataItem, "EstadoCursa.descripcion") == "BajaAceptada") ? "<i class='fa fa-check'></i>" : "<i class='fa fa-times'></i>",
                    //                    "<i class='fa fa-close'></i>",

                    DataBinder.Eval(c.DataItem, "codigo"),
                    "Eliminar Cursada",
                    "<i class='fa fa-trash'></i>",

                    string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("Beca", "Cursa", new { id = DataBinder.Eval(c.DataItem, "codigo") })),
                    "Asignar una beca",
                    "<i class='fa fa-money'></i>"


                    ));
            column.SetHeaderTemplateContent(c => ViewContext.Writer.Write(
                "<a class='btn btn-flat btn-xs btn-info' href='{0}'><i class='icon-plus'></i>&nbsp;{1}</a>",
                string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("NuevaCursada", "Cursa")),
                Strings.BtnNuevo
                ));
            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 50;
        });

        // Filtros
        settings.Settings.ShowHeaderFilterButton = false;
        settings.Settings.ShowFilterRow = false;
        settings.Settings.ShowFilterRowMenu = false;
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
        settings.Styles.FilterRow.BackColor = Color.LightGray;
        settings.Styles.GroupPanel.BackColor = Color.Lavender;
        // Comportamiento
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSort = true;
        settings.SettingsBehavior.AllowGroup = false;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.Styles.RowHotTrack.BackColor = Color.LightCyan;
        // Customization Window
        // https://demos.devexpress.com/MVCxGridViewDemos/Columns/CustomizationWindow
        settings.SettingsBehavior.EnableCustomizationWindow = false;
        settings.SettingsText.CustomizationWindowCaption = Strings.MsgColumnas;
        settings.SettingsLoadingPanel.Mode = DevExpress.Web.GridViewLoadingPanelMode.ShowOnStatusBar;
        settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        settings.SettingsText.EmptyDataRow = "No hay información para mostrar.";
        settings.SettingsPager.AlwaysShowPager = false;
        settings.SettingsPager.Summary.Text = " Página {0} de {1} ({2} elementos)";

    }
).Bind(Model).GetHtml()

<script>

    function preguntarBaja(codigoCursa) {
        bootbox.confirm({
            title: "Baja Cursada",
            message: "¿Esta seguro que desea dar de baja la cursada?",
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i> Cancelar'
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> Confirmar'
                }
            },
            callback: function (result) {
                if (result == true) {
                    var URLactual = window.location.pathname;
                    if (URLactual.search('nuevositio') != -1) {
                        $.ajax({
                            type: "post",
                            url: "/nuevositio/cursa/BajaCursada",
                            data: { IdCursa: codigoCursa },
                            datatype: "json",
                            traditional: true,
                            success: function (data) {
                                if (data.ok === true) {
                                    window.Grid.PerformCallback();
                                }
                            }
                        });
                    }
                    else
                    {
                        $.ajax({
                            type: "post",
                            url: "/cursa/BajaCursada",
                            data: { IdCursa: codigoCursa },
                            datatype: "json",
                            traditional: true,
                            success: function (data) {
                                if (data.ok === true) {
                                    window.Grid.PerformCallback();
                                }
                            }
                        });
                    }
                }
            }
        });
    }

    function preguntarEliminar(codigoCursa) {
        bootbox.confirm({
            title: "Eliminar Cursada",
            message: "¿Esta seguro que desea eliminar la cursada?",
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i> Cancelar'
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> Confirmar'
                }
            },
            callback: function (result) {
                if (result == true) {
                    var URLactual = window.location.pathname;
                    if (URLactual.search('nuevositio') != -1) {
                        $.ajax({
                            type: "post",
                            url: "/nuevositio/cursa/EliminarCursada",
                            data: { IdCursa: codigoCursa },
                            datatype: "json",
                            traditional: true,
                            success: function (data) {
                                if (data.ok === true) {
                                    window.Grid.PerformCallback();
                                    MensajeExito('Operación finalizada con éxito');
                                }
                                else{
                                    if(data.ok === false){
                                        MensajeError('La cursada no puede ser eliminada ya que tiene cuotas generadas');
                                    }
                                    else{
                                        MensajeError('No tiene permisos para realizar la acción');
                                    }
                                }
                            }
                        });
                    }
                    else
                    {
                        $.ajax({
                            type: "post",
                            url: "/cursa/EliminarCursada",
                            data: { IdCursa: codigoCursa },
                            datatype: "json",
                            traditional: true,
                            success: function (data) {
                                if (data.ok === true) {
                                    window.Grid.PerformCallback();
                                    MensajeExito('Operación finalizada con éxito');
                                }
                                else{
                                    if(data.ok === false){
                                        MensajeError('La cursada no puede ser eliminada ya que tiene cuotas generadas');
                                    }
                                    else{
                                        MensajeError('No tiene permisos para realizar la acción');
                                    }
                                }
                            }
                        });
                    }
                }
            }
        });
    }

    function habilitarAjax(codigoOferta) {
        var URLactual = window.location.pathname;
        if (URLactual.search('nuevositio') != -1) {
            $.ajax({
                type: "post",
                url: "/nuevositio/cursa/Habilitar",
                data: { IdOferta: codigoOferta },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    if (data.ok === true) {
                        window.Grid.PerformCallback();
                    }
                }
            });
        }
        else
        {
            $.ajax({
                type: "post",
                url: "/cursa/Habilitar",
                data: { IdOferta: codigoOferta },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    if (data.ok === true) {
                        window.Grid.PerformCallback();
                    }
                }
            });
        }
    }


</script>
