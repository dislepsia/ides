@using cnrl.Helpers
@model cnrl.cursa


@{
    ViewBag.Title = "Beca";
    Layout = null;
    var Bandera = (bool?)ViewBag.Bandera;
}

@Html.Hidden("Titulo", "Asignar Beca")
@Html.Hidden("Subtitulo", "")

<div class="row">
    <div class="col-md-12">

        @using (Ajax.BeginForm("AsignarBeca", "Cursa", FormMethod.Post, new AjaxOptions
            {
                OnSuccess = "Control",
                HttpMethod = "POST"
            }))
            {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.codigo)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="box box-solid box-success">
                <div class="box-header">
                    <h6 class="box-title" style="font-size: 1.5em;">Detalle</h6>
                </div>

                @*@if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <button type="button" class="close" data-dismiss="alert">×</button>
                            <span>@Strings.ErrorMensajeGenerico</span>
                        </div>
                    }*@

                @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                {
                    <div class="alert alert-error">@ViewBag.ErrorMessage</div>
                }

                <div class="box-body" id="valorBeca">
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Porcentaje Asignado:</label>
                                <div class="input-group" style="disabled">
                                    <div class="input-group-addon">
                                        <i class="fa fa-percent"></i>
                                    </div>
                                    @Html.EditorFor(model => model.porcentajeBeca, new { htmlAttributes = new { @class = "form-control descuento", @pattern = "([0-9]+[,]{1}[0-9]?|[0-9])", @*@type = "number",*@ @step = "0.01", @title = "El valor se debe encontrar entre 0 y 100. Si el valor decimal recuerde usar la coma e ingresar solo 2 decimales.", @min = "0.01", @max = "100", @placeholder = "0.00" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.porcentajeBeca, "", new { @class = "text-danger " })
                            </div>
                        </div>
                        <label style="color:rgb(248, 249, 249 )"> Aplicar </label>
                        <br />
                        <div class="col-md-2">
                            <input type="button" value="Calcular Descuento" class="btn btn-flat btn-success" onclick='calcular();' />
                        </div>
                    </div>
                </div>

                <div class="box-body" id="controles">
                    <div class="row">

                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Precio Alumno:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-dollar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.oferta1.precioAlumno, new { htmlAttributes = new { @class = "form-control precioAlumno", @type = "number", @min = "0", @step = "0.01" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.oferta1.precioAlumno, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Precio No Alumno:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-dollar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.oferta1.precioNoAlumno, new { htmlAttributes = new { @class = "form-control precioNoAlumno", @type = "number", @min = "0", @step = "0.01" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.oferta1.precioNoAlumno, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Precio Empleado:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-dollar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.oferta1.precioEmpleado, new { htmlAttributes = new { @class = "form-control precioEmpleado", @type = "number", @min = "0", @step = "0.01", @lang = "us" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.oferta1.precioEmpleado, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Precio Mayor de 60:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-dollar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.oferta1.precioMayorDe60, new { htmlAttributes = new { @class = "form-control precioMayorDe60", @type = "number", @min = "0", @step = "0.01" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.oferta1.precioMayorDe60, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @* Botones *@
            <div class="form-group">

                @if (Bandera.Value.Equals(true))
                {
                    <div class="pull-right">
                        <input type="submit" value="Guardar" class="btn btn-flat btn-success" />
                    </div>
                }

                <div class="pull-left">
                    <div class="btn btn-flat btn-default">
                        @Html.ActionLink("Cerrar", "Index")
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>

    var $precioAlumno;
    var $precioNoAlumno;
    var $precioEmpleado;
    var $precioMayorDe60;
    var $beca;

    $(document).ready(function () {
        $('#controles').find('input[type!="hidden"], textarea,  select').attr('disabled', 'disabled');

        $precioAlumno = $('.precioAlumno').val();
        $precioNoAlumno = $('.precioNoAlumno').val();
        $precioEmpleado = $('.precioEmpleado').val();
        $precioMayorDe60 = $('.precioMayorDe60').val();

        var x = $('.descuento').val();

        if (x > '0') {
            calcular();
            $('#valorBeca').find('input[type!="hidden"], textarea,  select').attr('disabled', 'disabled');
        }

    })

    function calcular() {
        var $becaString = $('.descuento').val();
        var $beca = $becaString.replace(",", ".");

        //var $precio = $('.precioAlumno').val();
        //console.log("Precio Alumno: " + $precio);
        //console.log("Descuento: " + $precio * $beca / 100);

        $(".precioAlumno").val(($precioAlumno - ($precioAlumno * $beca / 100)).toFixed(2));
        $(".precioNoAlumno").val(($precioNoAlumno - ($precioNoAlumno * $beca / 100)).toFixed(2));
        $(".precioEmpleado").val(($precioEmpleado - ($precioEmpleado * $beca / 100)).toFixed(2));
        $(".precioMayorDe60").val(($precioMayorDe60 - ($precioMayorDe60 * $beca / 100)).toFixed(2));
    };

    function Control(data) {
        console.log(data);
        if (data.ok === true) {
            MensajeExito('Operación finalizada con éxito');
        } else {
            MensajeError('Operación finalizada con errores, por favor intente nuevamente.');
            $('#DlgGenericoBody').html(data);
        }
        $('.modal').modal('hide');
    }

</script>