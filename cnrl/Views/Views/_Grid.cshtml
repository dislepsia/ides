@using cnrl.Models
@using DevExpress.Web.Mvc.UI
@using System.Drawing
@using System.Web.UI.WebControls

@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "Grid";
        settings.KeyFieldName = "Id";
        settings.Caption = Strings.TituloJurisdicciones;
        settings.CallbackRouteValues = new { Controller = "Jurisdicciones", Action = "PartialGrid" };
        // Settings
        settings.Width = Unit.Percentage(100);
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.AlwaysShowPager = true;
        settings.SettingsPager.NumericButtonCount = 5;
        settings.SettingsPager.PageSizeItemSettings.Visible = false;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.ControlStyle.Paddings.Padding = Unit.Pixel(0);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.BackColor = Color.LightGray;
        // Columnas 
        settings.Columns.Add(col => { col.FieldName = "Id"; col.Visible = false; col.Caption = Strings.ColId; col.Width = Unit.Pixel(50); });
        settings.Columns.Add(col => { col.FieldName = "Descripcion"; col.Caption = Strings.ColDescripcion; });
        settings.Columns.Add(col => { col.FieldName = "Responsable"; col.Caption = Strings.ColResponsableJur; });
        settings.Columns.Add(col => { col.FieldName = "Instituto"; col.Caption = Strings.ColInstituto; });
        settings.Columns.Add(col => { col.FieldName = "Notas"; col.Caption = Strings.ColNotas; col.Visible = false; });
        settings.Columns.Add(col => { col.FieldName = "Activo"; col.Caption = Strings.ColActivo; col.Visible = false; col.Width = Unit.Pixel(30); col.ColumnType = MVCxGridViewColumnType.CheckBox; col.Settings.AllowHeaderFilter = DefaultBoolean.False; });
        // Botones
        settings.Columns.Add(col =>
        {
            col.SetDataItemTemplateContent(c => ViewContext.Writer.Write(
                "<a class='btn btn-flat btn-xs btn-info' href='{0}' title='{1}'>{2}</a>",
                @Url.Action("Index", "Regiones", new { jurisdiccion = DataBinder.Eval(c.DataItem, "Id") }),
                Strings.ColRegiones,
                DataBinder.Eval(c.DataItem, "Regiones")
            ));
            col.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            col.Settings.AllowHeaderFilter = DefaultBoolean.False;
            col.Settings.AllowAutoFilter = DefaultBoolean.False;
            col.Settings.AllowDragDrop = DefaultBoolean.False;
            col.Settings.AllowSort = DefaultBoolean.False;
            col.Caption = Strings.ColRegiones;
            col.Width = Unit.Pixel(30);
        });
        settings.Columns.Add(col =>
        {
            col.SetDataItemTemplateContent(c => ViewContext.Writer.Write(
                "<a class='btn btn-flat btn-xs btn-info' href='{0}' title='{1}'>{2}</a>",
                @Url.Action("Index", "Institutos", new { jurisdiccion = DataBinder.Eval(c.DataItem, "Id") }),
                Strings.ColInstitutos,
                DataBinder.Eval(c.DataItem, "Institutos")
            ));
            col.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            col.Settings.AllowHeaderFilter = DefaultBoolean.False;
            col.Settings.AllowAutoFilter = DefaultBoolean.False;
            col.Settings.AllowDragDrop = DefaultBoolean.False;
            col.Settings.AllowSort = DefaultBoolean.False;
            col.Caption = Strings.ColInstitutos;
            col.Width = Unit.Pixel(30);
        });
        settings.Columns.Add(col =>
        {
            col.SetDataItemTemplateContent(c => ViewContext.Writer.Write(
                "<a class='btn btn-flat btn-xs btn-info' href='{0}' title='{1}'>{2}</a>",
                @Url.Action("Index", "Nodos", new { jurisdiccion = DataBinder.Eval(c.DataItem, "Id") }),
                Strings.ColNodos,
                DataBinder.Eval(c.DataItem, "Nodos")
            ));
            col.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            col.Settings.AllowHeaderFilter = DefaultBoolean.False;
            col.Settings.AllowAutoFilter = DefaultBoolean.False;
            col.Settings.AllowDragDrop = DefaultBoolean.False;
            col.Settings.AllowSort = DefaultBoolean.False;
            col.Caption = Strings.ColNodos;
            col.Width = Unit.Pixel(30);
        });
        settings.Columns.Add(col =>
        {
            col.SetDataItemTemplateContent(c => ViewContext.Writer.Write(
                "<btn class='btn btn-flat btn-xs btn-info' onclick='{0}' title='{1}'>{2}</btn>",
                string.Format("dlgResponsables.Ver({0},{1})", (int)TipoResponsable.Jurisdiccion, DataBinder.Eval(c.DataItem, "Id")),
                Strings.ColResponsables,
                DataBinder.Eval(c.DataItem, "Responsables")
            ));
            col.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            col.Settings.AllowHeaderFilter = DefaultBoolean.False;
            col.Settings.AllowAutoFilter = DefaultBoolean.False;
            col.Settings.AllowDragDrop = DefaultBoolean.False;
            col.Settings.AllowSort = DefaultBoolean.False;
            col.Caption = Strings.ColResponsablesCorto;
            col.Width = Unit.Pixel(30);
        });
        settings.Columns.Add(column =>
        {
            if (User.IsInRole("Administrador"))
            {
                column.SetDataItemTemplateContent(c => ViewContext.Writer.Write(
                    "<a class='btn btn-flat btn-xs btn-info' href='{7}' title='{8}'>{9}</a>&nbsp;" +
                    "<a class='btn btn-flat btn-xs btn-info' href='{0}' title='{1}'>{2}</a>&nbsp;" +
                    "<a class='btn btn-flat btn-xs btn-info' href='{3}' title='{4}' {6}>{5}</a>",
                    string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("Editar", "Jurisdicciones", new {id = DataBinder.Eval(c.DataItem, "Id")})),
                    Strings.BtnEditar,
                    "<i class='fa fa-pencil'></i>",
                    string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("Borrar", "Jurisdicciones", new {id = DataBinder.Eval(c.DataItem, "Id")})),
                    Strings.BtnBorrar,
                    "<i class='fa fa-trash'></i>",
                    (bool) DataBinder.Eval(c.DataItem, "Activo") ? "" : "disabled",
                    string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("Ficha", "Jurisdicciones", new { id = DataBinder.Eval(c.DataItem, "Id") })),
                    Strings.BtnVer,
                    "<i class='fa fa-search'></i>"
                    ));

                column.SetHeaderTemplateContent(c => ViewContext.Writer.Write(
                    "<btn class='btn btn-flat btn-xs btn-info' onclick='{0}'><i class='icon-plus'></i>&nbsp;{1}</btn>",
                    string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("Crear", "Jurisdicciones")),
                    Strings.BtnNuevo
                    ));
            }
            else
            {
                if (User.IsInRole("AdminJurisdiccion") || User.IsInRole("AdminRed"))
                {
                    column.SetDataItemTemplateContent(c => ViewContext.Writer.Write(
                        "<a class='btn btn-flat btn-xs btn-info' href='{3}' title='{4}'>{5}</a>&nbsp;" +
                    "<a class='btn btn-flat btn-xs btn-info' href='{0}' title='{1}'>{2}</a>",
                    string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("Editar", "Jurisdicciones", new { id = DataBinder.Eval(c.DataItem, "Id") })),
                    Strings.BtnEditar,
                    "<i class='fa fa-pencil'></i>",
                     string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("Ficha", "Jurisdicciones", new { id = DataBinder.Eval(c.DataItem, "Id") })),
                    Strings.BtnVer,
                    "<i class='fa fa-search'></i>"
                    ));
                }
                else
                {
                    column.SetDataItemTemplateContent(c => ViewContext.Writer.Write(
                        "<a class='btn btn-flat btn-xs btn-info' href='{0}' title='{1}'>{2}</a>&nbsp;",
                     string.Format("javascript:dlgModal.Ver(\"{0}\")", @Url.Action("Ficha", "Jurisdicciones", new { id = DataBinder.Eval(c.DataItem, "Id") })),
                    Strings.BtnVer,
                    "<i class='fa fa-search'></i>"
                    ));
                }

            }

            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 100;
        });
        // Colorea los registros dados de Baja...
        settings.HtmlRowPrepared = (sender, e) =>
        {
            var activo = e.GetValue("Activo");
            if (activo == null)
                return;
            if (!bool.Parse(activo.ToString()))
                e.Row.BackColor = Color.FromArgb(255, 220, 220);
        };
        // Filtros
        settings.Settings.ShowHeaderFilterButton = false;
        settings.Settings.ShowFilterRow = false;
        settings.Settings.ShowFilterRowMenu = false;
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
        settings.Styles.GroupPanel.BackColor = Color.Lavender;
        // Comportamiento
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSort = true;
        settings.SettingsBehavior.AllowGroup = false;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.Styles.RowHotTrack.BackColor = Color.LightCyan;
        // Customization Window
        // https://demos.devexpress.com/MVCxGridViewDemos/Columns/CustomizationWindow
        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsText.CustomizationWindowCaption = Strings.MsgColumnas;
        settings.SettingsLoadingPanel.Mode = DevExpress.Web.GridViewLoadingPanelMode.ShowOnStatusBar;

    }
).Bind(Model).GetHtml()