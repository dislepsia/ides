//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cnrl
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class socioculturalesEntities : DbContext
    {
        public socioculturalesEntities()
            : base("name=socioculturalesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<asistencia> asistencia { get; set; }
        public virtual DbSet<EstadoCursa> EstadoCursa { get; set; }
        public virtual DbSet<localidad> localidad { get; set; }
        public virtual DbSet<menu> menu { get; set; }
        public virtual DbSet<motivoBaja> motivoBaja { get; set; }
        public virtual DbSet<nivelacion> nivelacion { get; set; }
        public virtual DbSet<periodolectivo> periodolectivo { get; set; }
        public virtual DbSet<permiso> permiso { get; set; }
        public virtual DbSet<plantillaEmail> plantillaEmail { get; set; }
        public virtual DbSet<precio> precio { get; set; }
        public virtual DbSet<provincia> provincia { get; set; }
        public virtual DbSet<sede> sede { get; set; }
        public virtual DbSet<tipocurso> tipocurso { get; set; }
        public virtual DbSet<tipodocumento> tipodocumento { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<cursa> cursa { get; set; }
        public virtual DbSet<XX_usuarios> XX_usuarios { get; set; }
        public virtual DbSet<frecuenciaCuota> frecuenciaCuota { get; set; }
        public virtual DbSet<curso> curso { get; set; }
        public virtual DbSet<ResultadoCursa> ResultadoCursa { get; set; }
        public virtual DbSet<oferta> oferta { get; set; }
        public virtual DbSet<Sector> Sector { get; set; }
        public virtual DbSet<Encuesta> Encuesta { get; set; }
        public virtual DbSet<RespuestasEncuesta> RespuestasEncuesta { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
    
        public virtual int ofertaDisponiblePorAlumno(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ofertaDisponiblePorAlumno", idUsuarioParameter);
        }
    
        public virtual int ofertaDisponiblePorAlumno1(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ofertaDisponiblePorAlumno1", idUsuarioParameter);
        }
    
        public virtual int ofertaDisponiblePorAlumno2(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ofertaDisponiblePorAlumno2", idUsuarioParameter);
        }
    
        public virtual int ofertaDisponiblePorAlumno3(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ofertaDisponiblePorAlumno3", idUsuarioParameter);
        }
    
        public virtual ObjectResult<ofertaDisponiblePorAlumno4_Result> ofertaDisponiblePorAlumno4(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ofertaDisponiblePorAlumno4_Result>("ofertaDisponiblePorAlumno4", idUsuarioParameter);
        }
    }
}
